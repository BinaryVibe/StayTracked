/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

/**
 *
 * @author samtheradiant
 */
public class TasksScreen extends javax.swing.JPanel {

    /**
     * Creates new form TasksScreen
     */
    public TasksScreen() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        topPanel = new javax.swing.JPanel();
        rightBtnsPanel = new javax.swing.JPanel();
        createTaskBtn = new javax.swing.JButton();
        centerPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        leftBtnsPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        projectsTable = new javax.swing.JTable();

        setBackground(new java.awt.Color(21, 25, 34));
        setLayout(new java.awt.BorderLayout());

        topPanel.setBackground(new java.awt.Color(21, 25, 34));
        topPanel.setMinimumSize(new java.awt.Dimension(20, 0));

        rightBtnsPanel.setBackground(new java.awt.Color(21, 25, 34));

        createTaskBtn.setBackground(new java.awt.Color(21, 25, 34));
        createTaskBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/plus.png"))); // NOI18N
        createTaskBtn.setToolTipText("Create project");
        createTaskBtn.setBorderPainted(false);
        createTaskBtn.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/plus-pressed.png"))); // NOI18N
        createTaskBtn.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        // createTaskBtn.putClientProperty("JButton.buttonType", "roundRect");
        createTaskBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createTaskBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout rightBtnsPanelLayout = new javax.swing.GroupLayout(rightBtnsPanel);
        rightBtnsPanel.setLayout(rightBtnsPanelLayout);
        rightBtnsPanelLayout.setHorizontalGroup(
            rightBtnsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rightBtnsPanelLayout.createSequentialGroup()
                .addContainerGap(133, Short.MAX_VALUE)
                .addComponent(createTaskBtn)
                .addContainerGap())
        );
        rightBtnsPanelLayout.setVerticalGroup(
            rightBtnsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rightBtnsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(createTaskBtn)
                .addContainerGap())
        );

        centerPanel.setBackground(new java.awt.Color(21, 25, 34));
        centerPanel.setLayout(new java.awt.BorderLayout());

        jLabel1.setFont(new java.awt.Font("sansserif", 2, 13)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(45, 168, 216));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Double click to edit!");
        centerPanel.add(jLabel1, java.awt.BorderLayout.CENTER);

        leftBtnsPanel.setBackground(new java.awt.Color(21, 25, 34));

        javax.swing.GroupLayout leftBtnsPanelLayout = new javax.swing.GroupLayout(leftBtnsPanel);
        leftBtnsPanel.setLayout(leftBtnsPanelLayout);
        leftBtnsPanelLayout.setHorizontalGroup(
            leftBtnsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 249, Short.MAX_VALUE)
        );
        leftBtnsPanelLayout.setVerticalGroup(
            leftBtnsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout topPanelLayout = new javax.swing.GroupLayout(topPanel);
        topPanel.setLayout(topPanelLayout);
        topPanelLayout.setHorizontalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, topPanelLayout.createSequentialGroup()
                .addComponent(leftBtnsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(centerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 667, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rightBtnsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        topPanelLayout.setVerticalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(rightBtnsPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(leftBtnsPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(centerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        add(topPanel, java.awt.BorderLayout.PAGE_START);

        projectsTable.setBackground(new java.awt.Color(21, 25, 34));
        projectsTable.setForeground(new java.awt.Color(221, 255, 255));
        projectsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title ", "Start Date", "Deadline", "Status", "Priority", "ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        projectsTable.setFillsViewportHeight(true);
        projectsTable.setRowHeight(25);
        projectsTable.setShowGrid(false);
        projectsTable.getTableHeader().setReorderingAllowed(false);
        // Set Enum columns' editor to be a JComboBox

        projectsTable.getColumnModel().getColumn(3).setCellEditor(new DefaultCellEditor(new JComboBox<>(Status.values())));
        projectsTable.getColumnModel().getColumn(4).setCellEditor(new DefaultCellEditor(new JComboBox<>(Priority.values())));
        projectsTable.getColumnModel().getColumn(1).setCellEditor(new JDateChooserEditor(new JTextField()));
        projectsTable.getColumnModel().getColumn(2).setCellEditor(new JDateChooserEditor(new JTextField()));

        // Listener for list selection
        projectsTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent ev) {
                handleButtonsVisiblity();
            }
        });

        // Set click to start editing
        for (int i = 0; i <= 4; i++) {
            DefaultCellEditor cellEditor = (DefaultCellEditor) projectsTable.getColumnModel().getColumn(i).getCellEditor();
            try {
                cellEditor.setClickCountToStart(2);
            }
            catch (NullPointerException ex) {
                System.out.println(i + "- " + ex.getMessage());
            }
        }

        TableColumnModel columnModel = projectsTable.getColumnModel();
        columnModel.removeColumn(projectsTable.getColumnModel().getColumn(5));

        JTableHeader tableHeader = projectsTable.getTableHeader();
        tableHeader.setBackground(new Color(45, 168, 216));
        tableHeader.setForeground(new Color(21, 25, 34));
        // tableHeader.setFont(new Font(projectsTable.getFont().getFontName(), Font.BOLD, projectsTable.getFont().getSize()));

        Action action = new AbstractAction()
        {
            public void actionPerformed(ActionEvent e)
            {
                TableCellListener tcl = (TableCellListener)e.getSource();
                updateCell(tcl);
                //        System.out.println("Row   : " + tcl.getRow());
                //        System.out.println("Column: " + tcl.getColumn());
                //        System.out.println("Old   : " + tcl.getOldValue());
                //        System.out.println("New   : " + tcl.getNewValue());
            }
        };

        TableCellListener tcl = new TableCellListener(projectsTable, action);
        projectsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                projectsTableclickHandler(evt);
            }
        });
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
        jScrollPane1.setViewportView(projectsTable);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void projectsTableclickHandler(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_projectsTableclickHandler
        int rowIndex = projectsTable.rowAtPoint(evt.getPoint());
        if (rowIndex < 0) {
            projectsTable.clearSelection();
            hintLbl.setVisible(false);
            showTasksBtn.setVisible(false);
            deleteBtn.setEnabled(false);
            infoBtn.setEnabled(false);
        } else {
            hintLbl.setVisible(true);
        }
    }//GEN-LAST:event_projectsTableclickHandler

    private void createTaskBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createTaskBtnActionPerformed
        Window parentWindow = SwingUtilities.windowForComponent(this);
        Frame parentFrame = null;
        if (parentWindow instanceof Frame frame) {
            parentFrame = frame;
        }
        CreateProjectScreen screen1 = new CreateProjectScreen(parentFrame, true, this);
        screen1.pack();
        screen1.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        screen1.setVisible(true);
    }//GEN-LAST:event_createTaskBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel centerPanel;
    private javax.swing.JButton createTaskBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel leftBtnsPanel;
    private javax.swing.JTable projectsTable;
    private javax.swing.JPanel rightBtnsPanel;
    private javax.swing.JPanel topPanel;
    // End of variables declaration//GEN-END:variables
}
